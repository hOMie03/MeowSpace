// <auto-generated />
using System;
using MeowSpace.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MeowSpace.Infrastructure.Migrations
{
    [DbContext(typeof(MeowSpaceDBContext))]
    [Migration("20250409053349_initialMigration")]
    partial class initialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MeowSpace.Domain.Entities.PetPost", b =>
                {
                    b.Property<int>("PostID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostID"));

                    b.Property<DateOnly>("PostCreationDate")
                        .HasColumnType("date");

                    b.Property<string>("PostDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("PostUpdationDate")
                        .HasColumnType("date");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PostID");

                    b.ToTable("PetPosts");

                    b.HasData(
                        new
                        {
                            PostID = 1,
                            PostCreationDate = new DateOnly(2025, 4, 9),
                            PostDescription = "Dharampal",
                            PostImage = "https://i.pinimg.com/736x/bc/08/e9/bc08e964513eb63238efabde6cd193d4.jpg",
                            PostTitle = "Dharampal",
                            PostUpdationDate = new DateOnly(2025, 4, 9),
                            UserID = "41776062 - 2222 - 1bbb - a222 - 2879a6680b9a"
                        });
                });

            modelBuilder.Entity("MeowSpace.Domain.Entities.PostComment", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentID"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PetPostPostID")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommentID");

                    b.HasIndex("PetPostPostID");

                    b.ToTable("PostComments");
                });

            modelBuilder.Entity("MeowSpace.Domain.Entities.PostCommentLikes", b =>
                {
                    b.Property<int>("CommentLikeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentLikeID"));

                    b.Property<int>("CommentLikesCounter")
                        .HasColumnType("int");

                    b.Property<int?>("PostCommentCommentID")
                        .HasColumnType("int");

                    b.HasKey("CommentLikeID");

                    b.HasIndex("PostCommentCommentID");

                    b.ToTable("PostCommentLikes");
                });

            modelBuilder.Entity("MeowSpace.Domain.Entities.PostLike", b =>
                {
                    b.Property<int>("PostLikeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostLikeID"));

                    b.Property<int>("LikesCounter")
                        .HasColumnType("int");

                    b.Property<int?>("PetPostPostID")
                        .HasColumnType("int");

                    b.HasKey("PostLikeID");

                    b.HasIndex("PetPostPostID");

                    b.ToTable("PostLikes");
                });

            modelBuilder.Entity("MeowSpace.Domain.Entities.PostComment", b =>
                {
                    b.HasOne("MeowSpace.Domain.Entities.PetPost", null)
                        .WithMany("Comments")
                        .HasForeignKey("PetPostPostID");
                });

            modelBuilder.Entity("MeowSpace.Domain.Entities.PostCommentLikes", b =>
                {
                    b.HasOne("MeowSpace.Domain.Entities.PostComment", null)
                        .WithMany("CommentLikes")
                        .HasForeignKey("PostCommentCommentID");
                });

            modelBuilder.Entity("MeowSpace.Domain.Entities.PostLike", b =>
                {
                    b.HasOne("MeowSpace.Domain.Entities.PetPost", null)
                        .WithMany("PostLikes")
                        .HasForeignKey("PetPostPostID");
                });

            modelBuilder.Entity("MeowSpace.Domain.Entities.PetPost", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("PostLikes");
                });

            modelBuilder.Entity("MeowSpace.Domain.Entities.PostComment", b =>
                {
                    b.Navigation("CommentLikes");
                });
#pragma warning restore 612, 618
        }
    }
}
